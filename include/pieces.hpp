#ifndef PIECES_HPP_INCLUDED
#define PIECES_HPP_INCLUDED

#include <unordered_map>
#include <vector>

static std::unordered_map<char, std::vector<int>> piece_square_tables = {
    {'P',
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 198, 198, 198, 198, 198, 198, 198, 198, 0,
      0, 178, 198, 198, 198, 198, 198, 198, 178, 0, 0, 178, 198, 198, 198,
      198, 198, 198, 178, 0, 0, 178, 198, 208, 218, 218, 208, 198, 178, 0,
      0, 178, 198, 218, 238, 238, 218, 198, 178, 0, 0, 178, 198, 208, 218,
      218, 208, 198, 178, 0, 0, 178, 198, 198, 198, 198, 198, 198, 178, 0,
      0, 198, 198, 198, 198, 198, 198, 198, 198, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
    {'B',
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 797, 824, 817, 808, 808, 817, 824, 797, 0,
      0, 814, 841, 834, 825, 825, 834, 841, 814, 0, 0, 818, 845, 838, 829,
      829, 838, 845, 818, 0, 0, 824, 851, 844, 835, 835, 844, 851, 824, 0,
      0, 827, 854, 847, 838, 838, 847, 854, 827, 0, 0, 826, 853, 846, 837,
      837, 846, 853, 826, 0, 0, 817, 844, 837, 828, 828, 837, 844, 817, 0,
      0, 792, 819, 812, 803, 803, 812, 819, 792, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
    {'N',
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 627, 762, 786, 798, 798, 786, 762, 627, 0,
      0, 763, 798, 822, 834, 834, 822, 798, 763, 0, 0, 817, 852, 876, 888,
      888, 876, 852, 817, 0, 0, 797, 832, 856, 868, 868, 856, 832, 797, 0,
      0, 799, 834, 858, 870, 870, 858, 834, 799, 0, 0, 758, 793, 817, 829,
      829, 817, 793, 758, 0, 0, 739, 774, 798, 810, 810, 798, 774, 739, 0,
      0, 683, 718, 742, 754, 754, 742, 718, 683, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
    {'R',
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1258, 1263, 1268,
      1272, 1272, 1268, 1263, 1258, 0, 0, 1258, 1263, 1268, 1272, 1272,
      1268, 1263, 1258, 0, 0, 1258, 1263, 1268, 1272, 1272, 1268, 1263,
      1258, 0, 0, 1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258, 0,
      0, 1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258, 0, 0, 1258,
      1263, 1268, 1272, 1272, 1268, 1263, 1258, 0, 0, 1258, 1263, 1268,
      1272, 1272, 1268, 1263, 1258, 0, 0, 1258, 1263, 1268, 1272, 1272,
      1268, 1263, 1258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
    {'Q',
     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 2529, 2529, 2529,
      2529, 2529, 2529, 2529, 2529, 0, 0, 2529, 2529, 2529, 2529, 2529,
      2529, 2529, 2529, 0, 0, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
      2529, 0, 0, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 0,
      0, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 0, 0, 2529,
      2529, 2529, 2529, 2529, 2529, 2529, 2529, 0, 0, 2529, 2529, 2529,
      2529, 2529, 2529, 2529, 2529, 0, 0, 2529, 2529, 2529, 2529, 2529,
      2529, 2529, 2529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
    {'K', {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60098, 60132, 60073, 60025, 60025, 60073, 60132, 60098, 0, 0, 60119, 60153, 60094, 60046, 60046, 60094, 60153, 60119, 0, 0, 60146, 60180, 60121, 60073, 60073, 60121, 60180, 60146, 0, 0, 60173, 60207, 60148, 60100, 60100, 60148, 60207, 60173, 0, 0, 60196, 60230, 60171, 60123, 60123, 60171, 60230, 60196, 0, 0, 60224, 60258, 60199, 60151, 60151, 60199, 60258, 60224, 0, 0, 60287, 60321, 60262, 60214, 60214, 60262, 60321, 60287, 0, 0, 60298, 60332, 60273, 60225, 60225, 60273, 60332, 60298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}};

static std::unordered_map<char, int> piece_values = {
    {'P', 100}, {'N', 280}, {'B', 320}, {'R', 429}, {'Q', 929}, {'K', 60000}};

#endif  // !PIECES_HPP_INCLUDED